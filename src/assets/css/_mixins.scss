@charset "utf-8";
@import "settings";

@function remSet($fontSize) {
  @return $fontSize * 1rem / (16 * $rootFontSize);
}

// 像素转换为rem
@function pem($fontSize) {
  //@return $fontSize / 75 * 1rem;
  @return $fontSize/2458 * 100vw;
}

// 像素转换为vw
@mixin px2vw($px: 24) {
  //font-size: $px*10/75 * 1vw;
  font-size: $px/2458 * 100vw;
}

@mixin px2px($px: 24) {
  font-size: round($px / 2) * 1px;

  [data-dpr="2"] & {
    font-size: $px * 1px;
  }

  [data-dpr="2.5"] & {
    font-size: round($px * 2.5 / 2) * 1px;
  }

  [data-dpr="2.75"] & {
    font-size: round($px * 2.75 / 2) * 1px;
  }

  [data-dpr="3"] & {
    font-size: round($px * 3 / 2) * 1px;
  }

  [data-dpr="4"] & {
    font-size: $px * 2px;
  }
}

// font-size属性的px2px转化
@mixin fsp($fontSize) {
  @include px2vw($fontSize);
}

// 像素转换为rem
// 参数为属性，属性值列表
@mixin remSet($property, $vars…) {
  $lists: ();

  @for $i from 1 through length($vars) {
    $lists: join($lists, remSet(nth($vars, $i)), space);
  }

  #{$property}: $lists;
}

// 垂直渐变背景
@mixin gradient-vertical($direction, $start, $end, $times: 1) {

  // background: $start;
  @if $direction==top {
    $direction: to bottom;
  } @else if $direction==bottom {
    $direction: to top;
  }

  @if $times==1 {
    background-image: none;
  } @else {
    $all: linear-gradient($direction, $start, $end);

    @for $i from 2 to $times {
      $all: append($all, linear-gradient($direction, $start, $end), comma);
    }

    background-image: $all;
  }
}

// 行高和高度一致
@mixin hl($height) {
  height: $height;
  line-height: $height;
}

// 背景图路径简写
@mixin bg($path, $left: center, $top: center) {
  background-image: url(#{$path});
  background-position: $left $top;
  background-repeat: no-repeat;
  background-size: contain;
}


// rgb,rgba缩写
@mixin rgb-cl($num) {
  color: rgb($num, $num, $num);
}

@mixin rgb-bg($num) {
  background-color: rgb($num, $num, $num);
}

@mixin rgba-cl($num, $opacity: 0) {
  color: rgba($num, $num, $num, $opacity);
}

@mixin rgba-bg($num, $opacity: 0) {
  background-color: rgba($num, $num, $opacity);
}

// 传统的sticky footer，需要明确传入footer的高度
// 并且，不适合将内容区作为fixed，absolute定位
@mixin stickyFooter($content, $footer, $footerHeight) {

  body,
  html {
    height: 100%;
  }

  #{$content} {
    min-height: 100%;
    margin-bottom: -$footerHeight;
  }

  #{$content}:after {
    display: block;
    content: '';
  }

  #{$footer},
  #{$content}:after {
    height: $footerHeight;
  }
}

// 基于flex的sticky footer 解决方案
@mixin stickyFooterNew($content) {
  html {
    height: 100%;
  }

  body {
    min-height: 100%;
    display: flex;
    flex-direction: column;
  }

  #{$content} {
    flex: 1;
  }
}

// error and correct icon
@mixin error-icon($iconWidth, $iconHeight, $iconBg) {

  // position: relative;
  &:before,
  &:after {
    position: absolute;
    content: '';
    left: 50%;
    top: 50%;
    width: $iconWidth;
    height: $iconHeight;
    border-radius: 2*$iconHeight;
    background-color: $iconBg;
  }

  &:before {
    transform: translate(-50%, -50%) rotate(-45deg);
  }

  &:after {
    transform: translate(-50%, -50%) rotate(45deg);
  }
}

@mixin correct-icon($iconWidth, $iconHeight, $borderWidth, $iconBg) {
  &:before {
    position: absolute;
    content: '';
    left: 50%;
    top: 50%;
    width: $iconWidth;
    height: $iconHeight;
    border: $borderWidth solid $iconBg;
    border-top: 0;
    border-right: 0;
    transform: translate(-50%, -65%) rotate(-45deg);
  }
}

@mixin error($width, $bg, $iconWidth, $iconHeight, $iconBg) {
  display: block;
  width: $width;
  height: $width;
  border-radius: 50%;
  background-color: $bg;
  @include error-icon($iconWidth, $iconHeight, $iconBg);
}

@mixin correct($width, $bg, $iconWidth, $iconHeight, $borderWidth, $iconBg) {
  position: relative;
  display: block;
  width: $width;
  height: $width;
  border-radius: 50%;
  background-color: $bg;
  @include correct-icon($iconWidth, $iconHeight, $borderWidth, $iconBg); // &:before {
  //     position: absolute;
  //     content: '';
  //     left: 50%;
  //     top: 50%;
  //     width: remSet($iconWidth);
  //     height: remSet($iconHeight);
  //     border: remSet($borderWidth) solid $iconBg;
  //     border-top: 0;
  //     border-right: 0;
  //     transform: translate(-50%, -65%) rotate(-45deg);
  // }
}


@mixin mbg($bgname) {
  @include bg($img, $bgname);
}

// clearfix
%clearfix {

  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

// 文本溢出
%ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 文本折行切断
%word-break {
  word-break: break-word;
  word-wrap: break-word;
}

%text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// 文本折行溢出，显示省略号
// 只是适合webkit浏览器
@mixin line-clamp($clamps: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $clamps;
  -webkit-box-orient: vertical;
}

// triangle
%triangle-basic {
  content: "";
  height: 0;
  width: 0;
  overflow: hidden;
}

@mixin triangle($direction, $size, $borderColor) {
  @extend %triangle-basic;

  @if $direction==top {
    border-bottom: $size solid $borderColor;
    border-left: $size dashed transparent;
    border-right: $size dashed transparent;
  } @else if $direction==right {
    border-left: $size solid $borderColor;
    border-top: $size dashed transparent;
    border-bottom: $size dashed transparent;
  } @else if $direction==bottom {
    border-top: $size solid $borderColor;
    border-left: $size dashed transparent;
    border-right: $size dashed transparent;
  } @else if $direction==left {
    border-right: $size solid $borderColor;
    border-top: $size dashed transparent;
    border-bottom: $size dashed transparent;
  }
}

// placeholder selector
// resource: http://stackoverflow.com/questions/2610497/change-an-inputs-html5-placeholder-color-with-css/2610741#2610741
@mixin form-place {
  ::-webkit-input-placeholder {
    /* WebKit browsers */
    @content;
    /* webkit browser placeholder line-height is 28px */
    // line-height: 28px;
  }

  :-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    @content;
    opacity: 1;
  }

  ::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    @content;
    opacity: 1;
  }

  :-ms-input-placeholder {
    /* Internet Explorer 10+ */
    @content;
  }
}

// Retina images. 
// @include image-2x("../images/img-2x.png", 200px, 200px);
// Use with care - http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
@mixin image-2x($url, $width, $height) {

  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6 / 2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    // on retina, use image that's scaled by 2
    background-image: url(#{$url});
    background-size: $width $height;
  }
}

// grids
@mixin grids($selector: ".grids", $columns: 8, $gutter: 16) {

  // $columns:8;
  #{$selector} {
    display: block;
    margin-left: remSet(-$gutter / 2);
    margin-right: remSet(-$gutter / 2);
    overflow: hidden;
    @extend %clearfix;

    @for $i from 1 through $columns {
      > .col#{$i} {
        position: relative;
        float: left;
        width: $i / $columns * 100%;
        @include remSet(padding, 0, $gutter / 2);
      }
    }
  }
}
